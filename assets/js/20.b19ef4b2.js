(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{368:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("strong",[s._v("Table of Contents")]),s._v(" "),t("em",[s._v("generated with "),t("a",{attrs:{href:"https://github.com/thlorenz/doctoc",target:"_blank",rel:"noopener noreferrer"}},[s._v("DocToc"),t("OutboundLink")],1)])]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6"}},[s._v("集合框架")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E6%A6%82%E8%BF%B0"}},[s._v("概述")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#collection%E6%8E%A5%E5%8F%A3%E6%96%B9%E6%B3%95-"}},[s._v("Collection接口方法 :")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E8%BF%AD%E4%BB%A3%E5%99%A8%E4%B8%BB%E8%A6%81%E7%94%A8%E6%9D%A5%E9%81%8D%E5%8E%86collection%E6%8E%A5%E5%8F%A3%E5%8F%8A%E5%85%B6%E5%AE%9E%E7%8E%B0%E7%B1%BB%E8%80%8C%E4%B8%8D%E6%98%AFmap%E6%8E%A5%E5%8F%A3"}},[s._v("迭代器(主要用来遍历Collection接口及其实现类，而不是Map接口)")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#foreach%E5%BE%AA%E7%8E%AFjdk50%E6%96%B0%E5%A2%9E%E7%94%A8%E4%BA%8E%E9%81%8D%E5%8E%86%E9%9B%86%E5%90%88%E5%92%8C%E6%95%B0%E6%8D%AE"}},[s._v("foreach循环(jdk5.0新增，用于遍历集合和数据)")])])])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#list%E6%8E%A5%E5%8F%A3"}},[s._v("List接口")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#arraylistlinkedlist%E5%92%8Cvector%E7%9A%84%E5%BC%82%E5%90%8C"}},[s._v("ArrayList、LinkedList和Vector的异同")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#arraylist%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90jdk78"}},[s._v("ArrayList源码分析(JDK7、8)")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#linkedlist%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90"}},[s._v("LinkedList源码分析")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#vector"}},[s._v("Vector")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#list%E6%8E%A5%E5%8F%A3%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95"}},[s._v("List接口常用方法")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#list%E6%8E%A5%E5%8F%A3%E7%9A%84%E9%81%8D%E5%8E%86%E6%96%B9%E5%BC%8F"}},[s._v("List接口的遍历方式")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#set%E6%8E%A5%E5%8F%A3"}},[s._v("Set接口")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#hashset"}},[s._v("HashSet")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E9%87%8D%E5%86%99hashcode%E6%96%B9%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E5%88%99"}},[s._v("重写hashCode()方法的基本原则")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#linkedhashset"}},[s._v("LinkedHashSet")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#treeset"}},[s._v("TreeSet")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#map%E6%8E%A5%E5%8F%A3"}},[s._v("Map接口")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#hashmap"}},[s._v("HashMap")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%B8%80hashmap%E7%9A%84%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86-%E4%BB%A5jdk7%E4%B8%BA%E4%BE%8B%E8%AF%B4%E6%98%8E"}},[s._v("一、HashMap的底层实现原理 (以jdk7为例说明：)")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BA%8Cjdk8%E7%9B%B8%E8%BE%83%E4%BA%8Ejdk7%E5%9C%A8%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0%E6%96%B9%E9%9D%A2%E7%9A%84%E4%B8%8D%E5%90%8C"}},[s._v("二、jdk8相较于jdk7在底层实现方面的不同")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%B8%89hashmap%E6%BA%90%E7%A0%81%E4%B8%AD%E7%9A%84%E9%87%8D%E8%A6%81%E5%B8%B8%E9%87%8F"}},[s._v("三、HashMap源码中的重要常量")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#hashtable"}},[s._v("Hashtable")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#linkedhashmap"}},[s._v("LinkedHashMap")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#treemap"}},[s._v("TreeMap")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#properties"}},[s._v("Properties")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#collections%E5%B7%A5%E5%85%B7%E7%B1%BB"}},[s._v("Collections工具类")])])]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"集合框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集合框架"}},[s._v("#")]),s._v(" 集合框架")]),s._v(" "),t("h3",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Java集合可分为Colledtion和 Map 两种体系\n\nCollection接口:单列数据，定义了存取一组对象的方法的集合：\n- List接口:元素有序、可重复的集合\n\t- ArrayList、LinkedList、Vector\n\t\n- Set接口:元素无序、不可重复的集合\n\t- HashSet、LinkedHashSet、TreeSet\n\t\nMap接口:双列数据，保存具有映射关系“key-value对”的集合\n\t- HashMap、LinkedHashMap、TreeMap、HashTable、Properties\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"collection接口方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#collection接口方法"}},[s._v("#")]),s._v(" Collection接口方法 :")]),s._v(" "),t("p",[t("strong",[s._v("Collection若储存的是自定义类的对象，需要自定义类重写equals方法")])]),s._v(" "),t("p",[t("strong",[s._v("List：重写equals方法")])]),s._v(" "),t("p",[t("strong",[s._v("Set(HashSet、LinkedHashSet为例)：equals、hashcode方法")])]),s._v(" "),t("p",[s._v("​\t\t"),t("strong",[s._v("(TreeSet为例)：排序时指定比较方式，以比较方法返回0为准判断是否相同")])]),s._v(" "),t("blockquote",[t("p",[s._v("包含基本的增删改查抽象方法")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v('contains方法在判断集合中是否包含某元素时，调用的是元素的equals方法，例如：是否包含new String("xxx")时，比较的是字面值')]),s._v(" "),t("p",[s._v("在判断是否包含new 自定义类(相同属性值)时，如果没有重写equals方法，均为false，重写了即为true")])]),s._v(" "),t("li",[t("p",[s._v("remove方法同理，重写equals方法后即可")])]),s._v(" "),t("li",[t("p",[s._v("removeAll(Collection collection)：相当于求两个集合的差集，会把调用此方法的集合中的值修改")])]),s._v(" "),t("li",[t("p",[s._v("retainAll(Collection collection) ：相当于求两个集合的交集，也会把调用此方法的集合中的值修改")])]),s._v(" "),t("li",[t("p",[s._v("集合转换为数组：toArray()")])]),s._v(" "),t("li",[t("p",[s._v("iterator()：返回Iterator接口的实例，用于遍历集合元素。")])])]),s._v(" "),t("h3",{attrs:{id:"迭代器-主要用来遍历collection接口及其实现类-而不是map接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代器-主要用来遍历collection接口及其实现类-而不是map接口"}},[s._v("#")]),s._v(" 迭代器(主要用来遍历Collection接口及其实现类，而不是Map接口)")]),s._v(" "),t("blockquote",[t("p",[s._v("lterator对象称为迭代器(设计模式的一种)，主要用于遍历Collection集合中的元素。\n"),t("strong",[s._v("GOF给迭代器模式的定义为:提供一种方法访问一个容器(container)对象中各个元素，而又不需暴露该对象的内部细节。迭代器模式，就是为容器而生")]),s._v("。类似于“公交车上的售票员”、“火车上的乘务员”、“空姐”。")]),s._v(" "),t("p",[s._v("Collection接口继承了java.lang.lterable接口，该接口有一个iterator()方法，那么所有实现了Collection接口的集合类都有一个iterator()方法，用以返回一个实现了lterator接口的对象。")]),s._v(" "),t("p",[s._v("lterator仅用于遍历集合，Iterator本身并不提供承装对象的能力。如果需要创建lterator对象，则必须有一个被迭代的集合。")]),s._v(" "),t("p",[s._v("集合对象每次调用iterator()方法都得到一个全新的迭代器对象，默认游标都在集合的第一个元素之前。")])]),s._v(" "),t("ul",[t("li",[s._v("hasNext()方法：返回是否还有下一个元素")]),s._v(" "),t("li",[s._v("next()方法：移动到下一个元素")]),s._v(" "),t("li",[s._v("remove()方法：删除当前元素")])]),s._v(" "),t("p",[t("strong",[s._v("注意：")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("lterator可以删除集合的元素，但是是遍历过程中通过迭代器对象的remove方法，不是集合对象的remove方法。\n\n如果还未调用next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("或在上一次调用next方法之后已经调用了remove方法，再调用remove都会报legalstateException。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h5",{attrs:{id:"foreach循环-jdk5-0新增-用于遍历集合和数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#foreach循环-jdk5-0新增-用于遍历集合和数据"}},[s._v("#")]),s._v(" foreach循环(jdk5.0新增，用于遍历集合和数据)")]),s._v(" "),t("p",[t("strong",[s._v("底层仍是使用iterator")])]),s._v(" "),t("p",[s._v("使用增强for循环，修改(String s: list)中的s的值，list中的值并不会被修改，因为s是一个新的遍历，只是循环时先被赋予了list中的值，而其自身并不是list中的元素")]),s._v(" "),t("h2",{attrs:{id:"list接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list接口"}},[s._v("#")]),s._v(" List接口")]),s._v(" "),t("blockquote",[t("ul",[t("li",[t("p",[s._v("鉴于Java中数组用来存储数据的局限性，我们通常使用List替代数组")])]),s._v(" "),t("li",[t("p",[s._v("List集合类中元素有序、且可重复，集合中的每个元素都有其对应的顺序索引。")])]),s._v(" "),t("li",[t("p",[s._v("List容器中的元素都对应一个整数型的序号记载其在容器中的位置，可以根据序号存取容器中的元素。")])]),s._v(" "),t("li",[t("p",[s._v("JDK API中List接口的实现类常用的有:ArrayList、LinkedList和Vector。")])])])]),s._v(" "),t("h3",{attrs:{id:"arraylist、linkedlist和vector的异同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraylist、linkedlist和vector的异同"}},[s._v("#")]),s._v(" ArrayList、LinkedList和Vector的异同")]),s._v(" "),t("p",[t("strong",[s._v("同：")])]),s._v(" "),t("p",[s._v("​\t三者都实现了List接口，存储数据的特点相同：存储有序的、可重复的数据")]),s._v(" "),t("p",[t("strong",[s._v("异：")])]),s._v(" "),t("ul",[t("li",[s._v("ArrayList作为List接口主要实现类，最常用，是线程不安全的，效率高；底层使用object[]存储")]),s._v(" "),t("li",[s._v("LinkedList：底层使用双向链表存储，对于频繁的插入和删除操作，使用此类效率比ArrayList高")]),s._v(" "),t("li",[s._v("Vector：作为List接口的古老实现类，基本不用，线程安全的，效率低；底层也使用object[]存储")])]),s._v(" "),t("h3",{attrs:{id:"arraylist源码分析-jdk7、8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraylist源码分析-jdk7、8"}},[s._v("#")]),s._v(" ArrayList源码分析(JDK7、8)")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("JDK7：")]),s._v(" "),t("ul",[t("li",[s._v("ArrayList list = new ArrayList()；//底层elementData数组初始大小为10")]),s._v(" "),t("li",[s._v("执行add()时，如果此次的添加导致底层elementData数组容量不够，则扩容。默认情况下，扩容为原来容量的1.5倍，同时需要将原有数组中的数据复制到新的数组中")])]),s._v(" "),t("p",[t("code",[s._v("结论")]),s._v("：建议开发中不要使用空参构造器，指定好预计容量，避免频繁扩容")])]),s._v(" "),t("li",[t("p",[s._v("JDK8：")]),s._v(" "),t("ul",[t("li",[s._v("底层elementData初始化为{}，并没有初始化为长度10的数组，而是第一次调用add的时候，底层才创建了长度为10的数组，并将数据加入到数组。后续的添加和扩容操作与JDK7无异")])])])]),s._v(" "),t("p",[t("code",[s._v("总结")]),s._v("：JDK7中的ArrayList的对象创建类似于单例模式中的饿汉式，而JDK8中的类似于懒汉式，延迟了数组的创建，节省了内存")]),s._v(" "),t("h3",{attrs:{id:"linkedlist源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist源码分析"}},[s._v("#")]),s._v(" LinkedList源码分析")]),s._v(" "),t("p",[s._v("底层实现为双向链表")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("E")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("E")]),s._v(" item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("E")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("E")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("E")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("E")]),s._v(" element"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("E")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("item "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" element"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prev "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"vector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vector"}},[s._v("#")]),s._v(" Vector")]),s._v(" "),t("p",[s._v("JDK7、8通过构造器创建对象时，底层都创建了长度为10的数组；在扩容方面，默认扩容为原来的数组长度的2倍")]),s._v(" "),t("h3",{attrs:{id:"list接口常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list接口常用方法"}},[s._v("#")]),s._v(" List接口常用方法")]),s._v(" "),t("p",[s._v("List除了从Collection集合继承的方法外，List集合里添加了一些根据索引来操作集合元素的方法。")]),s._v(" "),t("ul",[t("li",[s._v("void add(int index, Object ele):在index位置插入ele元素")]),s._v(" "),t("li",[s._v("boolean addAll(int index, Collection eles):从index位置开始将eles中的所有元素添加进来")]),s._v(" "),t("li",[s._v("Object get(int index):获取指定index位置的元素")]),s._v(" "),t("li",[s._v("int indexOf(Object obj):返回obj在集合中首次出现的位置")]),s._v(" "),t("li",[s._v("int lastIndexOf(Object obj):返回obj在当前集合中末次出现的位置")]),s._v(" "),t("li",[s._v("Object remove(int index):移除指定index位置的元素，并返回此元素")]),s._v(" "),t("li",[s._v("Object set(int index,Object ele):设置指定index位置的元素为ele")]),s._v(" "),t("li",[s._v("List subList(int fromIndex, int tolndex):返回从fromIndex到tolndex位置的左闭右开的 子集合")])]),s._v(" "),t("h3",{attrs:{id:"list接口的遍历方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list接口的遍历方式"}},[s._v("#")]),s._v(" List接口的遍历方式")]),s._v(" "),t("ul",[t("li",[s._v("Iterator迭代器方式")]),s._v(" "),t("li",[s._v("增强for循环")]),s._v(" "),t("li",[s._v("普通for循环")])]),s._v(" "),t("h2",{attrs:{id:"set接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set接口"}},[s._v("#")]),s._v(" Set接口")]),s._v(" "),t("blockquote",[t("p",[s._v("Set接口是Collection的子接口，set接口没有提供额外的方法\nSet集合不允许包含相同的元素，如果试把两个相同的元素加入同一个Set集合中，则添加操作失败。\nSet判断两个对象是否相同不是使用==运算符，而是根据equals()方法")]),s._v(" "),t("p",[t("strong",[s._v("Set接口中没有额外定义新的方法，使用的都是Collection中声明过的方法。")])])]),s._v(" "),t("p",[s._v("一、Set：储存无序的、不可重复的数据")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("无序性：不等于随机性。存储的数据在底层数组中并非按照数组索引的顺序添加的，"),t("strong",[s._v("而是根据数据的哈希值决定的")])])]),s._v(" "),t("li",[t("p",[s._v("不可重复性：保证添加的元素按照equals()判断时，不能返回true。即：相同的元素只能添加一次")])])]),s._v(" "),t("p",[t("strong",[s._v("二、添加元素的过程：以HashSet为例：")])]),s._v(" "),t("blockquote",[t("p",[s._v("我们向HashSet中添加元素a,首先调用元素a所在类的hashCode()方法，计算元素a的哈希值，此哈希值接着通过某种算法计算出在HashSet底层数组中的存放位置（即为:索引位置），判断数组此位置上是否已经有元素:\n如果此位置上没有其他元素，则元素α添加成功。"),t("strong",[s._v("----\x3e情况1")]),s._v("\n如果此位置上有其他元素b(或以链表形式存在的多个元素），则比较元素a与元素b的hash值:\n如果hash值不相同，则元素α添加成功。"),t("strong",[s._v("----\x3e情况2")]),s._v("\n如果hash值相同，进而需要调用元素α所在类的equals()方法:\n如果equals()返回true,元素α添加失败\n如果equals()返回false,则元素α添加成功。"),t("strong",[s._v("----\x3e情况3")])]),s._v(" "),t("p",[s._v("对于添加成功的情况2和情况3而言:元素a与已经存在指定索引位置上数据以链表的方式存储。")]),s._v(" "),t("p",[s._v("jdk 7：元素α放到数组中，指向原来的元素。\njdk 8：原来的元素在数组中，指向元素α")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202201061533293.png",alt:"image-20211101132752667"}})]),s._v(" "),t("h3",{attrs:{id:"hashset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[s._v("#")]),s._v(" HashSet")]),s._v(" "),t("blockquote",[t("p",[s._v("作为Set接口的主要实现类；是线程不安全的；可以储存null值")]),s._v(" "),t("p",[s._v("HashSet是 Set接口的典型实现，大多数时候使用Set集合时都使用这个实现类。")]),s._v(" "),t("p",[s._v("HashSet按 Hash 算法来存储集合中的元素，因此具有很好的存取、查找、删除性能。")]),s._v(" "),t("p",[s._v("HashSet具有以下特点:")]),s._v(" "),t("ol",[t("li",[s._v("不能保证元素的排列顺序")]),s._v(" "),t("li",[s._v("HashSet不是线程安全的")]),s._v(" "),t("li",[s._v("集合元素可以是null")])]),s._v(" "),t("p",[t("strong",[s._v("HashSet集合判断两个元素相等的标准:两个对象通过hashCode()方法比较相等，并且两个对象的equals()方法返回值也相等。")])]),s._v(" "),t("p",[t("strong",[s._v("对于存放在Set容器中的对象，对应的类一定要重写equals()和hashCode()方法，以实现对象相等规则。即:“相等的对象必须具有相等的散列码”。")])])]),s._v(" "),t("p",[t("strong",[s._v("要求：1.向Set中添加的数据，其所在的类一定要重写hashCode()和equals()方法")])]),s._v(" "),t("p",[s._v("​\t\t\t"),t("strong",[s._v("2.重写的hashCode()和equals()方法尽可能保持一致性")])]),s._v(" "),t("p",[t("strong",[s._v("底层也是数组(是一个HashMap)，初始容量为16，当如果使用率超过0.75，(16*0.75=12)就会扩大容量为原来的2倍。(16扩容为32，依次为64,128.....等) 详情见HashMap源码")])]),s._v(" "),t("p",[t("strong",[s._v("图示：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/image-20211101132759077.png",alt:"image-20211101132759077"}})]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("jdk1.7时，是将hashCode相同，但equals不同的元素，按新的元素排在原来的位置，使用链表将原来的元素链到新元素的后面")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("而jdk1.8时，是将新的元素一直链到原来的元素的后面")])])])]),s._v(" "),t("h4",{attrs:{id:"重写hashcode-方法的基本原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重写hashcode-方法的基本原则"}},[s._v("#")]),s._v(" 重写hashCode()方法的基本原则")]),s._v(" "),t("ul",[t("li",[s._v("在程序运行时，同一个对象多次调用hashCode()方法应该返回相同的值")]),s._v(" "),t("li",[s._v("当两个对象的equals()方法比较返回true时，这两个对象的hashCode()方法的返回值也应相等")]),s._v(" "),t("li",[s._v("对象中用作equals()方法比较的Field，都应该用来计算hashCode值")])]),s._v(" "),t("h3",{attrs:{id:"linkedhashset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[s._v("#")]),s._v(" LinkedHashSet")]),s._v(" "),t("blockquote",[t("p",[s._v("作为HashSet的子类；遍历其内部数据时，可以按照添加的顺序遍历")]),s._v(" "),t("p",[s._v('在添加数据的同时，每个数据还维护了两个引用，用于记录此数据的前后两个数据的地址，即可使得遍历"有序"；')]),s._v(" "),t("p",[s._v("优点：对于频繁的遍历操作，LinkedHashSet效率高于HashSet")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/image-20211101132804589.png",alt:"image-20211101132804589"}})]),s._v(" "),t("h3",{attrs:{id:"treeset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#treeset"}},[s._v("#")]),s._v(" TreeSet")]),s._v(" "),t("blockquote",[t("p",[s._v("可以按照添加对象的指定属性进行排序")])]),s._v(" "),t("p",[t("strong",[s._v("向TreeSet中添加的数据应该是同一个类的对象，否则会报错。")])]),s._v(" "),t("ol",[t("li",[t("p",[s._v("当类不是自定义对象的时候，类似Integer，String等实现了comparable接口的，可以自动排序")])]),s._v(" "),t("li",[t("p",[s._v("当类为自定义类时，就会有两种排序方式：")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("自然排序：让自定义类实现comparable接口，重写compareTo方法。"),t("strong",[s._v("此时，比较两对象是否相同的标准为：compareTo()方法返回0，不再是equals()")])])]),s._v(" "),t("li",[t("p",[s._v("使用定制排序：实现一个Comparator接口，将其作为参数构造TreeSet对象。"),t("strong",[s._v("此时，比较两对象是否相同的标准为：compare()方法返回0，不再是equals()")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeSetTest2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparator")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" comparator "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" o2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" compare "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" o1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("compareTo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("compare"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" compare"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" o2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeSet")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" people "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeSet")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("comparator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        people"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zdk"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        people"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wk"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        people"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wb"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        people"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zzm"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        people"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zzm"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" person "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" people"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"person = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" person"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//person = Person{name='wb', age=20}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//person = Person{name='wk', age=19}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//person = Person{name='zdk', age=20}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//person = Person{name='zzm', age=18}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//person = Person{name='zzm', age=20}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"map接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#map接口"}},[s._v("#")]),s._v(" Map接口")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202201061533220.png",alt:"image-20211101132811618"}})]),s._v(" "),t("h3",{attrs:{id:"hashmap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[s._v("#")]),s._v(" HashMap")]),s._v(" "),t("ul",[t("li",[s._v("是Map的主要实现类")]),s._v(" "),t("li",[s._v("线程不安全，效率高")]),s._v(" "),t("li",[s._v("可以存储null的key和value")]),s._v(" "),t("li",[s._v("底层：\n"),t("ul",[t("li",[s._v("数组+链表 (jdk1.7及之前)")]),s._v(" "),t("li",[s._v("数组+链表+红黑树 (jdk8)")])])])]),s._v(" "),t("h4",{attrs:{id:"一、hashmap的底层实现原理-以jdk7为例说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、hashmap的底层实现原理-以jdk7为例说明"}},[s._v("#")]),s._v(" 一、HashMap的底层实现原理 (以jdk7为例说明：)")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("HashMap map = new HashMap();在实例化以后，底层创建了长度为16的一维数组Entry[] table")])]),s._v(" "),t("li",[t("p",[s._v("在执行多次put操作后，调用map.put(key1,value1)：")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("情况1")]),s._v("：首先，先调用HaspMap中的hash()方法计算key1的哈希值，此哈希值经过某种算法计算以后，得到在Entry数组中的存放位置，如果此位置上的数据为空，此时的key1-value1添加成功")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("情况2")]),s._v("：如果此位置上的数据不为空，(意味着此位置上存在一个或多个数据(以链表形式存在))，则比较key1和已经存在的一个或多个数据的key的哈希值：")]),s._v(" "),t("p",[s._v("如果key1的哈希值与已经存在的数据的key的哈希值都不相同，此时key1-value1添加成功")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("情况3")]),s._v("：如果key1的哈希值与已存在的某一个数据(key2-value2)的key的哈希值相同，就继续比较：")]),s._v(" "),t("p",[s._v("调用key1所在类的equals()方法，比较：")]),s._v(" "),t("p",[s._v("如果equals()返回false，证明两个key不同，key1-value1添加成功")]),s._v(" "),t("p",[s._v("如果equals()返回true，证明两个key相同，会使用value1区替换value2")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("补充")]),s._v("：关于情况2和情况3：此时的key1-value1和原来的数据一起以链表的方式存储")])])])]),s._v(" "),t("li",[t("p",[s._v("扩容问题：当超出临界值(且要存放的位置非空)，就扩容为原来容量的2倍，并将原来的数据复制过来")])])]),s._v(" "),t("h4",{attrs:{id:"二、jdk8相较于jdk7在底层实现方面的不同"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、jdk8相较于jdk7在底层实现方面的不同"}},[s._v("#")]),s._v(" 二、jdk8相较于jdk7在底层实现方面的不同")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("new HashMap()时，底层没有创建一个长度为16的数组；")])]),s._v(" "),t("li",[t("p",[s._v("jdk8底层的数组 是：Node[]，而不是Entry[]")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Entry")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hash"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("首次调用put()方法时，底层才创建长度为16的数组")])]),s._v(" "),t("li",[t("p",[s._v("jdk7底层结构只有：数组+链表。jdk8中变为：数组+链表+红黑树。")]),s._v(" "),t("p",[s._v("当数组的某一个索引位置上的元素以链表形式存在的数据个数大于8且当前数组的长度小于64时，此时此索引位置上的所有数据改为使用红黑树存储")])])]),s._v(" "),t("h4",{attrs:{id:"三、hashmap源码中的重要常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、hashmap源码中的重要常量"}},[s._v("#")]),s._v(" 三、HashMap源码中的重要常量")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("DEFAULT_INITIAL_CAPACITY : HashMap的默认容量，16")])])]),s._v(" "),t("li",[t("p",[s._v("MAXIMUM_CAPACITY : HashMap的最大支持容量，2的30次方")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("DEFAULT_LOAD_FACTOR: HashMap的默认加载因子  0.75")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("TREEIFY_THRESHOLD: Bucket中链表长度大于该默认值，转化为红黑树 ：8")])])]),s._v(" "),t("li",[t("p",[s._v("UNTREEIFY_THRESHOLD: Bucket中红黑树存储的Node小于该默认值，转化为链表：6")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("MIN_TREEIFY_CAPACITY: 桶中的Node被树化时最小的hash表容量：64。(当桶中Node的数量大到需要变红黑树时，若hash表容量小于MIN_TREEIFY_CAPACITY时，此时应执行resize扩容操作这个MIN_TREEIFY_CAPACITY的值至少是TREEIFY_THRESHOLD的4倍。)")])])]),s._v(" "),t("li",[t("p",[s._v("table: 存储元素的数组，总是2的n次幂")])]),s._v(" "),t("li",[t("p",[s._v("entrySet: 存储具体元素的集")])]),s._v(" "),t("li",[t("p",[s._v("size: HashMap中存储的键值对的数量")])]),s._v(" "),t("li",[t("p",[s._v("modCount: HashMap扩容和结构改变的次数。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("threshold: 扩容的临界值，=容量*填充因子")])])]),s._v(" "),t("li",[t("p",[s._v("loadFactor: 填充因子")])])]),s._v(" "),t("h3",{attrs:{id:"hashtable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashtable"}},[s._v("#")]),s._v(" Hashtable")]),s._v(" "),t("ul",[t("li",[s._v("Map的古老实现类")]),s._v(" "),t("li",[s._v("线程安全的，效率低")]),s._v(" "),t("li",[s._v("不可以存储null的key和value")])]),s._v(" "),t("h3",{attrs:{id:"linkedhashmap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashmap"}},[s._v("#")]),s._v(" LinkedHashMap")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("保证在遍历map元素时，可以按照添加的顺序实现遍历。")]),s._v(" "),t("p",[s._v("原因：在原有的HashMap底层结构基础上增加了一对指针，指向前一个和后一个元素，对于频繁的遍历操作，此类的执行效率高于HashMap")]),s._v(" "),t("p",[s._v("一下是LinkedHashMap中的内部类")])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" before"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" after"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" hash"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hash"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"treemap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#treemap"}},[s._v("#")]),s._v(" TreeMap")]),s._v(" "),t("ul",[t("li",[s._v("保证按照添加的key-value对进行排序，实现排序遍历。此时考虑key 的自然排序和定制排序")]),s._v(" "),t("li",[s._v("底层使用红黑树")]),s._v(" "),t("li",[s._v("向TreeMap中添加key-value，要求key必须是由同一个类创建的对象")]),s._v(" "),t("li",[s._v("按key进行排序：自然排序、定制排序")])]),s._v(" "),t("ol",[t("li",[t("p",[s._v("自然排序")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeMapTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" treeMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" zdk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zdk"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" wk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wk"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" wb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wb"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" zzm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zzm"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("zdk"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wk"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("96")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("zzm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("定制排序")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeMapTest1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" treeMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TreeMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" o2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" o2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" zdk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zdk"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" wk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wk"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" wb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wb"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" zzm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zzm"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("zdk"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wk"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("96")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("zzm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("treeMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[s._v("#")]),s._v(" Properties")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("是HashMap的子类，常用来处理配置文件。")])]),s._v(" "),t("li",[t("p",[s._v("key和value都是String类型")])]),s._v(" "),t("li",[t("p",[s._v("存取数据时，建议使用setProperty(String key,String value)方法和getProperty(String key)方法")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202201061533188.png",alt:"image-20211101132819053"}})])]),s._v(" "),t("li",[t("p",[s._v("按文件名读取时，路径默认为项目路径，如果是多模块，则为模块路径(实例中的jdbc.properties文件放在当前模块下，而不是父项目下)")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("propertiesTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),s._v(" properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Properties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        properties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("load")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FileInputStream")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jdbc.properties"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Enumeration")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" propertyNames "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Enumeration")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" properties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("propertyNames")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("propertyNames"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasMoreElements")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" element "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" propertyNames"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextElement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" property "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" properties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getProperty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("element"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("element"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" property"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])])])]),s._v(" "),t("p",[s._v("问：1. HashMap的底层实现原理？")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("\t2. HashMap和Hashtable的异同？\n\t3. CurrentHashMap与Hashtable的异同？\n")])])]),t("h2",{attrs:{id:"collections工具类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#collections工具类"}},[s._v("#")]),s._v(" Collections工具类")]),s._v(" "),t("ul",[t("li",[s._v("Collections是一个操作Set、List、Map等集合的工具类")]),s._v(" "),t("li",[s._v("Collections中提供了一系列静态的方法对集合元素进行排序、查询、和修改等操作，还提供了对集合对象设置不可变、对集合对象实现同步控制等方法")])]),s._v(" "),t("ol",[t("li",[t("p",[s._v("排序操作(均为static方法)")]),s._v(" "),t("ul",[t("li",[s._v("reverse(List)：反转List中的元素的顺序")]),s._v(" "),t("li",[s._v("shuffle(List)：对List集合元素进行随机排序")]),s._v(" "),t("li",[s._v("sort(List)：根据元素的自然顺序对指定List集合元素按升序排序")]),s._v(" "),t("li",[s._v("sort(List，Comparator)：根据指定的Comparator产生的顺序对List集合元素进行排序")]),s._v(" "),t("li",[s._v("swap(List，int，int)：将指定list集合中的i处元素和j处元素进行交换")]),s._v(" "),t("li",[s._v("Object max(Collection):根据元素的自然顺序，返回给定集合中的最大元素")]),s._v(" "),t("li",[s._v("Object max(Collection，Comparator):根据Comparator指定的顺序，返回给定集合中的最大元素")]),s._v(" "),t("li",[s._v("Object min(collection)")]),s._v(" "),t("li",[s._v("Object min(collection，Comparator)")]),s._v(" "),t("li",[s._v("int frequency(collection，object):返回指定集合中指定元素的出现次数")]),s._v(" "),t("li",[s._v("void copy(list dest,List src):将src中的内容复制到dest中")]),s._v(" "),t("li",[s._v("boolean replaceAll(List list,object oldVal，object newVal):使用新值替换List对")])]),s._v(" "),t("p",[s._v("注意：在使用copy()方法时，首先需要将目标集合的size填充到大于等于源集合的size")]),s._v(" "),t("p",[s._v("一般使用：List dest = Arrays.asList(new Object[list.size()]);")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("同步控制")])]),s._v(" "),t("blockquote",[t("p",[s._v("Collections类中提供了多个synchronizedXxx()方法，该方法可使将指定集合包装成线程同步的集合，从而可以解决多线程并发访问集合时的线程安全问题")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);