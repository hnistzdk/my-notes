(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{482:function(t,a,s){"use strict";s.r(a);var n=s(1),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("Table of Contents")]),t._v(" "),a("em",[t._v("generated with "),a("a",{attrs:{href:"https://github.com/thlorenz/doctoc",target:"_blank",rel:"noopener noreferrer"}},[t._v("DocToc"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#bus"}},[t._v("Bus")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%A6%82%E8%BF%B0"}},[t._v("概述")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("是什么")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%83%BD%E5%B9%B2%E5%98%9B"}},[t._v("能干嘛")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%BA%E4%BD%95%E7%A7%B0%E4%B8%BA%E6%80%BB%E7%BA%BF"}},[t._v("为何称为总线")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%80%BB%E7%BA%BF"}},[t._v("什么是总线")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86"}},[t._v("基本原理")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#rabbitmq"}},[t._v("RabbitMQ")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8A%A8%E6%80%81%E5%88%B7%E6%96%B0%E5%85%A8%E5%B1%80%E5%B9%BF%E6%92%AD"}},[t._v("动态刷新全局广播")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%8C%893355%E6%96%B0%E5%BB%BA3366"}},[t._v("按3355新建3366")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3"}},[t._v("设计思想")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#3344server%E7%AB%AF%E9%85%8D%E7%BD%AE"}},[t._v("3344Server端配置")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#pom"}},[t._v("pom")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#yaml"}},[t._v("yaml")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#33553366client%E7%AB%AF%E9%85%8D%E7%BD%AE"}},[t._v("3355、3366Client端配置")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#pom-1"}},[t._v("pom")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#yaml-1"}},[t._v("yaml")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%B5%8B%E8%AF%95"}},[t._v("测试")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8A%A8%E6%80%81%E5%88%B7%E6%96%B0%E5%AE%9A%E7%82%B9%E9%80%9A%E7%9F%A5"}},[t._v("动态刷新定点通知")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%AE%9E%E6%93%8D"}},[t._v("实操")])])])])])])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"bus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bus"}},[t._v("#")]),t._v(" Bus")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("前言")]),t._v(" "),a("p",[t._v("在上节的SpringCloud Config中，遇到了必须手动发请求去刷新配置的问题，这里使用消息总线Bus来实现配置的动态刷新全局广播")])]),t._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),a("h3",{attrs:{id:"是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[t._v("#")]),t._v(" 是什么")]),t._v(" "),a("blockquote",[a("p",[t._v("Bus支持两种消息代理：RabbitMQ和Kafka")]),t._v(" "),a("p",[a("code",[t._v("Spring Cloud Bus 配合Spring Cloud Config 使用可以实现配置的动态刷新")]),t._v("。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.zaiolos.top/images/202211131826379.png",alt:"image-20221113182651278"}})]),t._v(" "),a("blockquote",[a("p",[t._v("Spring Cloud Bus是用来将分布式系统的节点与轻量级消息系统链接起来的框架,\n"),a("strong",[t._v("它整合了Java的事件处理机制和消息中间件的功能")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"能干嘛"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#能干嘛"}},[t._v("#")]),t._v(" 能干嘛")]),t._v(" "),a("blockquote",[a("p",[t._v("Spring Cloud Bus能管理和传播分布式系统间的消息，就像一个分布式执行器，可用于广播状态更改、事件推送等，也可以当作微服务间的通信通道")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.zaiolos.top/images/202211131831166.png",alt:"image-20221113183111094"}})]),t._v(" "),a("h3",{attrs:{id:"为何称为总线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为何称为总线"}},[t._v("#")]),t._v(" 为何称为总线")]),t._v(" "),a("h3",{attrs:{id:"什么是总线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是总线"}},[t._v("#")]),t._v(" 什么是总线")]),t._v(" "),a("blockquote",[a("p",[t._v("在微服务架构的系统中，通常会使用"),a("strong",[t._v("轻量级的消息代理")]),t._v("来构建一个"),a("strong",[t._v("共用的消息主题")]),t._v("，并让系统中所有微服务实例都连接上来。由于"),a("strong",[t._v("该主题中产生的消息会被所有实例监听和消费，所以称它为消息总线")]),t._v("。在总线上的各个实例，都可以方便地广播一些需要让其他连接在该主题上的实例都知道的消息。")])]),t._v(" "),a("h3",{attrs:{id:"基本原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本原理"}},[t._v("#")]),t._v(" 基本原理")]),t._v(" "),a("blockquote",[a("p",[t._v("ConfigClient实例都监听MQ中同一个Exchange交换机(默认名字是springCloudBus)。当一个服务刷新数据的时候，它会把这个信息放入到Topic中，这样其它监听同一Topic的服务就能得到通知，然后去更新自身的配置。")])]),t._v(" "),a("h2",{attrs:{id:"rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq"}},[t._v("#")]),t._v(" RabbitMQ")]),t._v(" "),a("p",[t._v("参考https://www.zaiolos.top/my-notes/pages/f015b1/")]),t._v(" "),a("h2",{attrs:{id:"动态刷新全局广播"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态刷新全局广播"}},[t._v("#")]),t._v(" 动态刷新全局广播")]),t._v(" "),a("h3",{attrs:{id:"按3355新建3366"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按3355新建3366"}},[t._v("#")]),t._v(" 按3355新建3366")]),t._v(" "),a("p",[t._v("3366只有controller需要加一些")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RefreshScope")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigClientController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${server.port}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" serverPort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${server.name}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" serverName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/configInfo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConfigInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"serverPort："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("serverPort"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\t\\n\\n configInfo："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("serverName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h3",{attrs:{id:"设计思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计思想"}},[t._v("#")]),t._v(" 设计思想")]),t._v(" "),a("p",[a("strong",[t._v("1、利用消息总线触发一个客户端/bus/refresh,而刷新所有客户端的配置")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.zaiolos.top/images/202211131847277.png",alt:"image-20221113184704207"}})]),t._v(" "),a("p",[a("strong",[t._v("2、用消息总线触发一个服务端ConfigServer的/bus/refresh端点，而刷新所有客户端的配置")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.zaiolos.top/images/202211131847581.png",alt:"image-20221113184755508"}})]),t._v(" "),a("p",[t._v("显然图二更合适")]),t._v(" "),a("p",[t._v("原因：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("打破了微服务的职责单一性，因为微服务本身是业务模块，它本不应该承担配置刷新的职责")]),t._v(" "),a("li",[t._v("破坏了微服务各节点的对等性")]),t._v(" "),a("li",[t._v("有一定的局限性。例如，微服务在迁移时，它的网络地址尝尝会发生变化，此时如果想要做到自动刷新。那就回增加更多的修改")])])]),t._v(" "),a("h3",{attrs:{id:"_3344server端配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3344server端配置"}},[t._v("#")]),t._v(" 3344Server端配置")]),t._v(" "),a("h4",{attrs:{id:"pom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom"}},[t._v("#")]),t._v(" pom")]),t._v(" "),a("p",[t._v("新增消息总线依赖")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 消息总线--\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.cloud"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-bus-amqp"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml"}},[t._v("#")]),t._v(" yaml")]),t._v(" "),a("p",[t._v("新增yaml配置")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RabbitMQ相关配置")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rabbitmq")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 106.55.240.216\n  \t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5672")]),t._v("\n  \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里要注意 因为使用的是云服务器，guest只能在localhost登录 所以要使用别的用户进行登录认证")]),t._v("\n  \t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" admin\n  \t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暴露bus刷新配置的端点  必须要有actuator的依赖\t\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("management")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endpoints")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exposure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bus-refresh'")]),t._v("  \t\t\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])]),a("h3",{attrs:{id:"_3355、3366client端配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3355、3366client端配置"}},[t._v("#")]),t._v(" 3355、3366Client端配置")]),t._v(" "),a("h4",{attrs:{id:"pom-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-2"}},[t._v("#")]),t._v(" pom")]),t._v(" "),a("blockquote",[a("p",[t._v("同上新增消息总线依赖")])]),t._v(" "),a("h4",{attrs:{id:"yaml-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml-2"}},[t._v("#")]),t._v(" yaml")]),t._v(" "),a("blockquote",[a("p",[t._v("只需要新增RabbitMQ的相关配置，management的不用动")])]),t._v(" "),a("h3",{attrs:{id:"测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),a("p",[t._v("启动3344、3355、3366程序，访问3355、3366获取当前配置，成功")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.zaiolos.top/images/202211131914890.png",alt:"image-20221113191450836"}})]),t._v(" "),a("p",[t._v("然后git修改config-dev.yaml，server.name的值为 "),a("code",[t._v("update-66666")])]),t._v(" "),a("p",[t._v("然后发送请求到配置中心3344，注意url的正确")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" POST "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:3344/actuator/busrefresh"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("执行以后，再去测试3355和3366，发现两个都立刻就刷新了")]),t._v(" "),a("h2",{attrs:{id:"动态刷新定点通知"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态刷新定点通知"}},[t._v("#")]),t._v(" 动态刷新定点通知")]),t._v(" "),a("blockquote",[a("p",[t._v("有些时候，我们只需要部分微服务读取新的配置，部分保持不动，就需要进行定点通知")])]),t._v(" "),a("blockquote",[a("p",[t._v("简单来说，就是指定某一个实例生效，而不是全部")])]),t._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[t._v("做法")]),t._v(" "),a("p",[t._v("公式："),a("code",[t._v("curl -X POST http://localhost:3344/actuator/busrefresh/{destination}")])]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("刷新的请求不再发送到具体的服务实例上，而是发给config server通过"),a("code",[t._v("destination")]),t._v("参数类指定需要更新配置的服务或实例")])]),t._v(" "),a("h3",{attrs:{id:"实操"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实操"}},[t._v("#")]),t._v(" 实操")]),t._v(" "),a("blockquote",[a("p",[t._v("这里以只刷新3355端口的config-client为例，不通知3366")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("再次将config-dev.yaml文件的server.name修改为"),a("code",[t._v("update-8848")])])]),t._v(" "),a("li",[a("p",[t._v("运行命令")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" POST "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:3344/actuator/busrefresh/cloud-config-client:3355"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("p",[t._v("结果正如我们期望的")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://images.zaiolos.top/images/202211131942691.png",alt:"image-20221113194248584"}})]),t._v(" "),a("blockquote",[a("p",[t._v("这里要注意，作为{destination}"),a("code",[t._v("cloud-config-client:3355")]),t._v("的构成是，spring.application.name:server.port，即服务名称:服务端口号")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果我们不写端口号，就会通知这个服务名下的所有存在服务的端口上的实例")])])])}),[],!1,null,null,null);a.default=r.exports}}]);