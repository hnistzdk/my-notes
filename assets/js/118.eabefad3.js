(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{465:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("strong",[t._v("Table of Contents")]),t._v(" "),s("em",[t._v("generated with "),s("a",{attrs:{href:"https://github.com/thlorenz/doctoc",target:"_blank",rel:"noopener noreferrer"}},[t._v("DocToc"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E4%B8%89%E4%B8%AA%E9%98%B6%E6%AE%B5"}},[t._v("三个阶段")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88"}},[t._v("解决方案")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#rabbitmq"}},[t._v("RabbitMQ")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#rocketmq"}},[t._v("RocketMQ")])])])])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"三个阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三个阶段"}},[t._v("#")]),t._v(" 三个阶段")]),t._v(" "),s("ol",[s("li",[t._v("消息被发送时保持顺序(producer端)")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("Producer端确保消息顺序，唯一要做的事情就是将消息路由到特定的分区，在RocketMQ中，通过MessageQueueSelector实现分区的选择")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageQueueSelector")]),t._v(" messageQueueSelector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageQueueSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageQueue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" mqs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mqs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" mqs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("消息被存储时，保持和发送的顺序一致")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("这个由mq内部保证一致")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("消息被消费时，保持和存储的顺序一致("),s("strong",[t._v("consumer端")]),t._v(")")])]),t._v(" "),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),s("h3",{attrs:{id:"rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq"}},[t._v("#")]),t._v(" RabbitMQ")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("拆分为多个queue，每个queue对应一个consumer，消费者在消费的时候不去直接消费消息，而是将消息保存到内存队列(数组)中，根据消息的关键值(例如订单ID)进行哈希操作，将关键值相同的消息(一组需要保证顺序的消息)发送到相同的内存队列中去，然后分发给底层的Thread处理，一个线程只去一个内存队列中取消息，这样就保证了顺序性(可以支持高并发)。")]),t._v(" "),s("p",[s("br"),t._v("实际中consumer的数量是受限的，不会仅仅因为消息消费太慢而去增加consumer实例的数量，所以通过这种方式，可以在不增加consumer实例数量的前提下，加快消息消费的速度。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://images.zaiolos.top/images/202209162027207.png",alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"rocketmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rocketmq"}},[t._v("#")]),t._v(" RocketMQ")]),t._v(" "),s("p",[t._v("生产者消费者一般需要保证顺序消息的话，可能就是一个业务场景下的，比如订单的创建、支付、发货、收货。")]),t._v(" "),s("p",[s("br"),s("strong",[t._v("这些流程都有一个相同的订单号，可以利用这个订单号来实现顺序消费")])]),t._v(" "),s("p",[s("strong",[t._v("一个topic下有多个队列")]),t._v("，为了保证发送有序，"),s("strong",[t._v("RocketMQ")]),t._v("提供了"),s("strong",[t._v("MessageQueueSelector")]),t._v("队列选择机制，他有三种实现:")]),t._v(" "),s("br"),t._v(" "),s("p",[s("img",{attrs:{src:"https://images.zaiolos.top/images/202209162030060.png",alt:"image.png"}})]),t._v(" "),s("blockquote",[s("p",[t._v("我们可使用"),s("strong",[t._v("Hash取模法")]),t._v("，让同一个订单发送到同一个队列中，再使用同步发送，只有同个订单的创建消息发送成功，再发送支付消息。这样，我们保证了发送有序。")]),t._v(" "),s("p",[s("br"),s("strong",[t._v("RocketMQ")]),t._v("的topic内的队列机制,可以保证存储满足"),s("strong",[t._v("FIFO")]),t._v("，剩下的只需要消费者顺序消费即可。")]),t._v(" "),s("p",[s("br"),s("strong",[t._v("RocketMQ")]),t._v("仅保证顺序发送，顺序消费由消费者业务保证!!!")]),t._v(" "),s("p",[s("br"),t._v("这里很好理解，一个订单发送的时候放到一个队列里面去，同一个的订单号Hash一下是一样的结果，消费的时候肯定是同一个消费者消费，顺序就可以保证了")])])])}),[],!1,null,null,null);s.default=n.exports}}]);