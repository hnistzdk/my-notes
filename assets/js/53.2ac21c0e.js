(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{401:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("strong",[s._v("Table of Contents")]),s._v(" "),t("em",[s._v("generated with "),t("a",{attrs:{href:"https://github.com/thlorenz/doctoc",target:"_blank",rel:"noopener noreferrer"}},[s._v("DocToc"),t("OutboundLink")],1)])]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E6%96%B9%E6%B3%95%E5%8C%BA"}},[s._v("方法区")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%89%8D%E8%A8%80"}},[s._v("前言")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%A0%88%E5%A0%86%E6%96%B9%E6%B3%95%E5%8C%BA%E7%9A%84%E4%BA%A4%E4%BA%92%E5%85%B3%E7%B3%BB"}},[s._v("栈、堆、方法区的交互关系")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%96%B9%E6%B3%95%E5%8C%BA%E7%9A%84%E7%90%86%E8%A7%A3"}},[s._v("方法区的理解")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#hotspot%E4%B8%AD%E6%96%B9%E6%B3%95%E5%8C%BA%E7%9A%84%E6%BC%94%E8%BF%9B"}},[s._v("HotSpot中方法区的演进")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95%E5%8C%BA%E5%A4%A7%E5%B0%8F%E4%B8%8Eoom"}},[s._v("设置方法区大小与OOM")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#jdk7%E5%8F%8A%E4%BB%A5%E5%89%8D"}},[s._v("jdk7及以前")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#jdk8%E4%BB%A5%E5%90%8E"}},[s._v("JDK8以后")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E8%BF%99%E4%BA%9Boom"}},[s._v("如何解决这些OOM")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%96%B9%E6%B3%95%E5%8C%BA%E7%9A%84%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84"}},[s._v("方法区的内部结构")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E7%B1%BB%E5%9E%8B%E4%BF%A1%E6%81%AF"}},[s._v("类型信息")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%9F%9F%E4%BF%A1%E6%81%AF"}},[s._v("域信息")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%96%B9%E6%B3%95method%E4%BF%A1%E6%81%AF"}},[s._v("方法（Method）信息")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#non-final%E7%9A%84%E7%B1%BB%E5%8F%98%E9%87%8F"}},[s._v("non-final的类变量")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%85%A8%E5%B1%80%E5%B8%B8%E9%87%8F"}},[s._v("全局常量")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E8%BF%90%E8%A1%8C%E6%97%B6%E5%B8%B8%E9%87%8F%E6%B1%A0-vs-%E5%B8%B8%E9%87%8F%E6%B1%A0"}},[s._v("运行时常量池 VS 常量池")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%B8%B8%E9%87%8F%E6%B1%A0"}},[s._v("常量池")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%B8%B8%E9%87%8F%E6%B1%A0"}},[s._v("为什么需要常量池")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%B8%B8%E9%87%8F%E6%B1%A0%E4%B8%AD%E6%9C%89%E4%BB%80%E4%B9%88"}},[s._v("常量池中有什么")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%B0%8F%E7%BB%93"}},[s._v("小结")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E8%BF%90%E8%A1%8C%E6%97%B6%E5%B8%B8%E9%87%8F%E6%B1%A0"}},[s._v("运行时常量池")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%96%B9%E6%B3%95%E5%8C%BA%E4%BD%BF%E7%94%A8%E4%B8%BE%E4%BE%8B"}},[s._v("方法区使用举例")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%96%B9%E6%B3%95%E5%8C%BA%E7%9A%84%E6%BC%94%E8%BF%9B%E7%BB%86%E8%8A%82"}},[s._v("方法区的演进细节")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%B0%B8%E4%B9%85%E4%BB%A3%E8%A6%81%E8%A2%AB%E5%85%83%E7%A9%BA%E9%97%B4%E6%9B%BF%E4%BB%A3"}},[s._v("为什么永久代要被元空间替代？")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#stringtable%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%B0%83%E6%95%B4%E4%BD%8D%E7%BD%AE"}},[s._v("StringTable为什么要调整位置")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E5%AD%98%E6%94%BE%E5%9C%A8%E5%93%AA%E9%87%8C"}},[s._v("静态变量存放在哪里？")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%96%B9%E6%B3%95%E5%8C%BA%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6"}},[s._v("方法区的垃圾回收")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%80%BB%E7%BB%93"}},[s._v("总结")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98"}},[s._v("常见面试题")])])])])])])]),s._v(" "),t("hr"),s._v(" "),t("h1",{attrs:{id:"方法区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法区"}},[s._v("#")]),s._v(" 方法区")]),s._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("blockquote",[t("p",[s._v("方法区是运行时数据区的最后一个部分")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071021900.png",alt:"image-20200708093918121"}})]),s._v(" "),t("blockquote",[t("p",[s._v("从线程共享与否的角度来看")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071021659.png",alt:"image-20200708094507624"}})]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("问题")])]),s._v(" "),t("p",[s._v("ThreadLocal：如何保证多个线程在并发环境下的安全性？")]),s._v(" "),t("ul",[t("li",[s._v("典型应用就是数据库连接管理，以及会话管理")])]),s._v(" "),t("h2",{attrs:{id:"栈、堆、方法区的交互关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈、堆、方法区的交互关系"}},[s._v("#")]),s._v(" 栈、堆、方法区的交互关系")]),s._v(" "),t("p",[s._v("下面就涉及了对象的访问定位")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071022481.png",alt:"image-20200708094747667"}})]),s._v(" "),t("ul",[t("li",[s._v("Person：存放在元空间，也可以说方法区")]),s._v(" "),t("li",[s._v("person：存放在Java栈的局部变量表中")]),s._v(" "),t("li",[s._v("new Person()：存放在Java堆中")])]),s._v(" "),t("h2",{attrs:{id:"方法区的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法区的理解"}},[s._v("#")]),s._v(" 方法区的理解")]),s._v(" "),t("blockquote",[t("p",[s._v('《Java虚拟机规范》中明确说明："尽管所有的方法区在逻辑上是属于堆的一部分，但一些简单的实现可能不会选择去进行垃圾收集或者进行压缩。"')]),s._v(" "),t("p",[s._v("但对于HotSpotJVM而言，方法区还有一个别名叫做Non-Heap（非堆），目的就是要和堆分开。")])]),s._v(" "),t("p",[s._v("所以，"),t("strong",[s._v("方法区看作是一块独立于Java堆的内存空间")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071022247.png",alt:"image-20200708095853544"}})]),s._v(" "),t("p",[s._v("方法区主要存放的是 "),t("strong",[s._v("Class")]),s._v("，而堆中主要存放的是 "),t("strong",[s._v("实例化的对象")])]),s._v(" "),t("ul",[t("li",[s._v("方法区（Method Area）与Java堆一样，是各个线程共享的内存区域。")]),s._v(" "),t("li",[s._v("方法区在JVM启动的时候被创建，并且它的实际的物理内存空间中和Java堆区一样都可以是不连续的。")]),s._v(" "),t("li",[s._v("方法区的大小，跟堆空间一样，可以选择固定大小或者可扩展。")]),s._v(" "),t("li",[s._v("方法区的大小决定了系统可以保存多少个类，如果系统定义了太多的类，导致方法区溢出，虚拟机同样会抛出内存溢出错误：java.lang.OutOfMemoryError:"),t("code",[s._v("PermGen space")]),s._v("(JDK7 方法区的实现是永久代)  或者java.lang.OutOfMemoryError:"),t("code",[s._v("Metaspace")]),s._v("(JDK8 元空间)\n"),t("ul",[t("li",[s._v("加载大量的第三方的jar包")]),s._v(" "),t("li",[s._v("Tomcat部署的工程过多（30~50个）")]),s._v(" "),t("li",[s._v("大量动态的生成反射类")])])]),s._v(" "),t("li",[s._v("关闭JVM就会释放这个区域的内存。")])]),s._v(" "),t("h3",{attrs:{id:"hotspot中方法区的演进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hotspot中方法区的演进"}},[s._v("#")]),s._v(" HotSpot中方法区的演进")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在jdk7及以前，习惯上把方法区，称为"),t("strong",[s._v("永久代")]),s._v("。jdk8开始，使用"),t("strong",[s._v("元空间")]),s._v("取代了永久代。JDK "),t("strong",[s._v("1.8后，元空间存放在堆外内存中")])])]),s._v(" "),t("li",[t("p",[s._v("本质上，方法区和永久代并不等价。仅是对hotspot而言的。《Java虚拟机规范》对如何实现方法区，不做统一要求。例如：BEA JRockit / IBM J9 中不存在永久代的概念。")])])]),s._v(" "),t("blockquote",[t("p",[s._v("现在来看，当年使用永久代，不是好的idea。导致Java程序更容易oom（超过")]),s._v(" "),t("p",[s._v("-XX:MaxPermsize上限），因为永久代仍然使用的是java虚拟机的内存")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071022553.png",alt:"image-20200708102919149"}})]),s._v(" "),t("ul",[t("li",[s._v("而到了JDK8，终于完全废弃了永久代的概念，改用与JRockit、J9一样在本地内存中实现的元空间（Metaspace）来代替")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071022829.png",alt:"image-20200708103055914"}})]),s._v(" "),t("ul",[t("li",[t("p",[s._v("元空间的本质和永久代类似，都是对JVM规范中方法区的实现。不过元空间与永久代最大的区别在于："),t("strong",[s._v("元空间不在虚拟机设置的内存中，而是使用本地物理内存，而不是java虚拟机内存")])])]),s._v(" "),t("li",[t("p",[s._v("永久代、元空间二者并不只是名字变了，内部结构也调整了")])]),s._v(" "),t("li",[t("p",[s._v("根据《Java虚拟机规范》的规定，如果方法区无法满足新的内存分配需求时，将抛出OOM异常")])])]),s._v(" "),t("h2",{attrs:{id:"设置方法区大小与oom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置方法区大小与oom"}},[s._v("#")]),s._v(" 设置方法区大小与OOM")]),s._v(" "),t("p",[s._v("方法区的大小不必是固定的，JVM可以根据应用的需要动态调整。")]),s._v(" "),t("h3",{attrs:{id:"jdk7及以前"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk7及以前"}},[s._v("#")]),s._v(" jdk7及以前")]),s._v(" "),t("ul",[t("li",[s._v("通过-XX:Permsize 来设置永久代初始分配空间，默认值是20.75M")]),s._v(" "),t("li",[s._v("通过-XX:MaxPermsize 来设定永久代最大可分配空间。32位机器默认是64M，64位机器默认是82M")]),s._v(" "),t("li",[s._v("当JVM加载的类信息容量超过了这个值，会报异常OutOfMemoryError:PermGen space。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071023466.png",alt:"image-20200708111756800"}})]),s._v(" "),t("h3",{attrs:{id:"jdk8以后"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk8以后"}},[s._v("#")]),s._v(" JDK8以后")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("元数据区大小可以使用参数 -XX:MetaspaceSize 和 -XX:MaxMetaspaceSize指定")])]),s._v(" "),t("li",[t("p",[s._v("默认值依赖于平台。windows下，-XX:MetaspaceSize是21M，-XX:MaxMetaspaceSize的值是-1，即没有限制，因为其依赖于本地内存大小。")])]),s._v(" "),t("li",[t("p",[s._v("与永久代不同，如果不指定大小，默认情况下，虚拟机会耗尽所有的可用系统内存。如果元数据区发生溢出，虚拟机一样会抛出异常OutOfMemoryError:Metaspace")])]),s._v(" "),t("li",[t("p",[s._v("-XX:MetaspaceSize：设置初始的元空间大小。对于一个64位的服务器端JVM来说，其默认的-XX:MetaspaceSize值为21MB。这就是初始的高水位线，一旦触及这个水位线，Full GC将会被触发并卸载没用的类（即这些类对应的类加载器不再存活）然后这个高水位线将会重置。新的高水位线的值取决于GC后释放了多少元空间。如果释放的空间不足，那么在不超过MaxMetaspaceSize时，适当提高该值。如果释放空间过多，则适当降低该值。")])]),s._v(" "),t("li",[t("p",[s._v("如果初始化的高水位线设置过低，上述高水位线调整情况会发生很多次。通过垃圾回收器的日志可以观察到Full GC多次调用。为了避免频繁地GC，建议将-XX:MetaspaceSize设置为一个相对较高的值。")])])]),s._v(" "),t("blockquote",[t("p",[s._v("设置元空间大小命令：")]),s._v(" "),t("p",[s._v("-XX:MetaspaceSize=100m")]),s._v(" "),t("p",[s._v("设置元空间最大大小：")]),s._v(" "),t("p",[s._v("-XX:MaxMetaspaceSize=100m")])]),s._v(" "),t("h3",{attrs:{id:"如何解决这些oom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何解决这些oom"}},[s._v("#")]),s._v(" 如何解决这些OOM")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("要解决ooM异常或"),t("strong",[s._v("heap space")]),s._v("的异常，一般的手段是首先通过内存映像分析工具（如"),t("strong",[s._v("Eclipse Memory Analyzer")]),s._v("）对"),t("strong",[s._v("dump")]),s._v("出来的堆转储快照进行分析，重点是确认内存中的对象是否是必要的，也就是要先分清楚到底是出现了"),t("strong",[s._v("内存泄漏（Memory Leak）"),t("strong",[s._v("还是")]),s._v("内存溢出（Memory Overflow）")])]),s._v(" "),t("ul",[t("li",[s._v("内存泄漏就是 有大量的引用指向某些对象，但是这些对象以后不会使用了，但是因为它们还和GC ROOT有关联，所以导致以后这些对象也不会被回收，这就是内存泄漏的问题")])])]),s._v(" "),t("li",[t("p",[s._v("如果是内存泄漏，可进一步通过工具查看泄漏对象到"),t("strong",[s._v("GC Roots")]),s._v("的引用链。于是就能找到泄漏对象是通过怎样的路径与"),t("strong",[s._v("GC Roots")]),s._v("相关联并导致垃圾收集器无法自动回收它们的。掌握了泄漏对象的类型信息，以及"),t("strong",[s._v("GC Roots")]),s._v("引用链的信息，就可以比较准确地定位出泄漏代码的位置。")])]),s._v(" "),t("li",[t("p",[s._v("如果不存在内存泄漏，换句话说就是内存中的对象确实都还必须存活着，那就应当检查虚拟机的堆参数（-Xmx与-Xms），与机器物理内存对比看是否还可以调大，从代码上检查是否存在某些对象生命周期过长、持有状态时间过长的情况，尝试减少程序运行期的内存消耗。")])])]),s._v(" "),t("h2",{attrs:{id:"方法区的内部结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法区的内部结构"}},[s._v("#")]),s._v(" 方法区的内部结构")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071023210.png",alt:"image-20200708161728320"}})]),s._v(" "),t("p",[s._v("《深入理解Java虚拟机》书中对方法区（Method Area）存储内容描述如下：它用于存储已被虚拟机加载的"),t("strong",[s._v("类型信息、常量、静态变量、即时编译器编译后的代码缓存")]),s._v("等。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071023697.png",alt:"image-20200708161856504"}})]),s._v(" "),t("h3",{attrs:{id:"类型信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型信息"}},[s._v("#")]),s._v(" 类型信息")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("对每个加载的类型（类class、接口interface、枚举enum、注解annotation），JVm必须在方法区中存储以下类型信息：")]),s._v(" "),t("ul",[t("li",[s._v("这个类型的完整有效名称（全名=包名.类名）")]),s._v(" "),t("li",[s._v("这个类型直接父类的完整有效名（对于interface或是java.lang.Object，都没有父类）")]),s._v(" "),t("li",[s._v("这个类型的修饰符（public，abstract，final的某个子集）")]),s._v(" "),t("li",[s._v("这个类型直接接口的一个有序列表")])])]),s._v(" "),t("h3",{attrs:{id:"域信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#域信息"}},[s._v("#")]),s._v(" 域信息")]),s._v(" "),t("blockquote",[t("ul",[t("li",[t("p",[s._v("JVM必须在方法区中保存类型的所有域的相关信息以及域的声明顺序。")])]),s._v(" "),t("li",[t("p",[s._v("域的相关信息包括：域名称、域类型、域修饰符（public，private，protected，static，final，volatile，transient的某个子集）")])])])]),s._v(" "),t("h3",{attrs:{id:"方法-method-信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法-method-信息"}},[s._v("#")]),s._v(" 方法（Method）信息")]),s._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("JVM必须保存所有方法的以下信息，同域信息一样包括声明顺序：")]),s._v(" "),t("ul",[t("li",[s._v("方法名称")]),s._v(" "),t("li",[s._v("方法的返回类型（或void）")]),s._v(" "),t("li",[s._v("方法参数的数量和类型（按顺序）")]),s._v(" "),t("li",[s._v("方法的修饰符（public，private，protected，static，final，synchronized，native，abstract的一个子集）")]),s._v(" "),t("li",[s._v("方法的字节码（bytecodes）、操作数栈、局部变量表及大小（abstract和native方法除外）")]),s._v(" "),t("li",[s._v("异常表（abstract和native方法除外）\n"),t("ul",[t("li",[s._v("每个异常处理的开始位置、结束位置、代码处理在程序计数器中的偏移地址、被捕获的异常类的常量池索引")])])])])]),s._v(" "),t("h3",{attrs:{id:"non-final的类变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#non-final的类变量"}},[s._v("#")]),s._v(" non-final的类变量")]),s._v(" "),t("blockquote",[t("ul",[t("li",[t("p",[s._v("静态变量和类关联在一起，随着类的加载而加载，他们成为类数据在逻辑上的一部分")])]),s._v(" "),t("li",[t("p",[s._v("类变量被类的所有实例共享，即使没有类实例时，你也可以访问它")])])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * non-final的类变量\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MethodAreaTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Order")]),s._v(" order "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Order")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        order"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("order"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" number "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("如上代码所示，即使我们把order设置为null，也不会出现空指针异常")]),s._v(" "),t("h3",{attrs:{id:"全局常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局常量"}},[s._v("#")]),s._v(" 全局常量")]),s._v(" "),t("blockquote",[t("p",[s._v("全局常量就是使用 static final 进行修饰")]),s._v(" "),t("p",[t("strong",[s._v("被声明为final的类变量的处理方法则不同，每个全局常量在编译的时候就会被分配了")])])]),s._v(" "),t("h3",{attrs:{id:"运行时常量池-vs-常量池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行时常量池-vs-常量池"}},[s._v("#")]),s._v(" 运行时常量池 VS 常量池")]),s._v(" "),t("p",[s._v("运行时常量池，就是运行时常量池")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071023484.png",alt:"image-20200708171151384"}})]),s._v(" "),t("ul",[t("li",[s._v("方法区，内部包含了运行时常量池")]),s._v(" "),t("li",[s._v("字节码文件，内部包含了常量池")]),s._v(" "),t("li",[s._v("要弄清楚方法区，需要理解清楚ClassFile，因为加载类的信息都在方法区。")]),s._v(" "),t("li",[s._v("要弄清楚方法区的运行时常量池，需要理解清楚ClassFile中的常量池。")])]),s._v(" "),t("h3",{attrs:{id:"常量池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常量池"}},[s._v("#")]),s._v(" 常量池")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071023827.png",alt:"image-20200708172357052"}})]),s._v(" "),t("blockquote",[t("p",[s._v("一个有效的字节码文件中除了包含类的"),t("code",[s._v("版本信息")]),s._v("、"),t("code",[s._v("字段")]),s._v("、"),t("code",[s._v("方法")]),s._v("以及"),t("code",[s._v("接口")]),s._v("等描述符信息外，还包含一项信息就是常量池表（Constant Pool Table），包括各种字面量和对类型、域和方法的符号引用")])]),s._v(" "),t("h4",{attrs:{id:"为什么需要常量池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要常量池"}},[s._v("#")]),s._v(" 为什么需要常量池")]),s._v(" "),t("blockquote",[t("p",[s._v("一个java源文件中的类、接口，编译后产生一个字节码文件。而Java中的字节码需要数据支持，通常这种数据会很大以至于不能直接存到字节码里，换另一种方式，可以存到常量池，这个字节码包含了指向常量池的引用。在动态链接的时候会用到运行时常量池，之前有介绍。")])]),s._v(" "),t("p",[s._v("比如：如下的代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SimpleClass")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("虽然上述代码只有194字节，但是里面却使用了String、System、PrintStream及Object等结构。这里的代码量其实很少了，如果代码多的话，引用的结构将会更多，这里就需要用到常量池了。")]),s._v(" "),t("h4",{attrs:{id:"常量池中有什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常量池中有什么"}},[s._v("#")]),s._v(" 常量池中有什么")]),s._v(" "),t("ul",[t("li",[s._v("数量值")]),s._v(" "),t("li",[s._v("字符串值")]),s._v(" "),t("li",[s._v("类引用")]),s._v(" "),t("li",[s._v("字段引用")]),s._v(" "),t("li",[s._v("方法引用")])]),s._v(" "),t("p",[s._v("例如下面这段代码")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MethodAreaTest2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("将会被翻译成如下字节码")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("new "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#2  ")]),s._v("\ndup\ninvokespecial\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("p",[s._v("常量池、可以看做是一张表，虚拟机指令根据这张常量表找到要执行的类名、方法名、参数类型、字面量等类型")]),s._v(" "),t("h3",{attrs:{id:"运行时常量池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行时常量池"}},[s._v("#")]),s._v(" 运行时常量池")]),s._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("运行时常量池")]),s._v(" "),t("ul",[t("li",[s._v("运行时常量池（Runtime Constant Pool）是方法区的一部分。")]),s._v(" "),t("li",[s._v("常量池表（Constant Pool Table）是Class文件的一部分，"),t("strong",[s._v("用于存放编译期生成的各种字面量与符号引用")]),s._v("，"),t("code",[s._v("这部分内容将在类加载后存放到方法区的运行时常量池中")]),s._v("。")]),s._v(" "),t("li",[s._v("运行时常量池，在加载类和接口到虚拟机后，就会创建对应的运行时常量池。")]),s._v(" "),t("li",[s._v("JVM为每个已加载的类型（类或接口）都维护一个常量池。池中的数据项像数组项一样，是通过"),t("code",[s._v("索引访问")]),s._v("的。")]),s._v(" "),t("li",[s._v("运行时常量池中包含多种不同的常量，包括编译期就已经明确的数值字面量，也包括到运行期解析后才能够获得的方法或者字段引用。此时不再是常量池中的符号地址了，这里换为真实地址。\n"),t("ul",[t("li",[s._v("运行时常量池，相对于Class文件常量池的另一重要特征是："),t("strong",[s._v("具备动态性")]),s._v("。")]),s._v(" "),t("li",[s._v("运行时常量池类似于传统编程语言中的符号表（symboltable），但是它所包含的数据却比符号表要更加丰富一些。")]),s._v(" "),t("li",[s._v("当创建类或接口的运行时常量池时，如果构造运行时常量池所需的内存空间超过了方法区所能提供的最大值，则JVM会抛OutOfMemoryError异常。")])])])])]),s._v(" "),t("h2",{attrs:{id:"方法区使用举例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法区使用举例"}},[s._v("#")]),s._v(" 方法区使用举例")]),s._v(" "),t("p",[s._v("如下代码")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MethodAreaDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("Badge",{attrs:{text:"字节码执行过程展示"}}),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071023026.png",alt:"image-20200708204750374"}})]),s._v(" "),t("blockquote",[t("p",[s._v("首先将操作数500放入到操作数栈中")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071023920.png",alt:"image-20200708204953552"}})]),s._v(" "),t("blockquote",[t("p",[s._v("然后存储到局部变量表中")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024765.png",alt:"image-20200708205029376"}})]),s._v(" "),t("blockquote",[t("p",[s._v("然后重复一次，把100放入局部变量表中，最后再将变量表中的500 和 100 取出，进行操作")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024934.png",alt:"image-20200708205221737"}})]),s._v(" "),t("blockquote",[t("p",[s._v("将500 和 100 进行一个除法运算，在把结果入栈")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024249.png",alt:"image-20200708205413721"}})]),s._v(" "),t("blockquote",[t("p",[s._v("在最后就是输出流，需要调用运行时常量池的常量")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024437.png",alt:"image-20200708205708057"}})]),s._v(" "),t("blockquote",[t("p",[s._v("最后调用invokevirtual（虚方法调用），然后返回")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024875.png",alt:"image-20200708205909176"}})]),s._v(" "),t("blockquote",[t("p",[s._v("返回时")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024609.png",alt:"image-20200708210540696"}})]),s._v(" "),t("blockquote",[t("p",[s._v("程序计数器始终计算的都是当前代码运行的位置，目的是为了方便记录 方法调用后能够正常返回，或者是进行了CPU切换后，也能回来到原来的代码进行执行。")])]),s._v(" "),t("h2",{attrs:{id:"方法区的演进细节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法区的演进细节"}},[s._v("#")]),s._v(" 方法区的演进细节")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("首先明确")]),s._v(" "),t("p",[s._v("只有Hotspot才有永久代。BEA JRockit、IBMJ9等来说，是不存在永久代的概念的。原则上如何实现方法区属于虚拟机实现细节，不受《Java虚拟机规范》管束，并不要求统一")])]),s._v(" "),t("p",[s._v("Hotspot中方法区的变化：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("JDK1.6及以前")]),s._v(" "),t("th",[s._v("有永久代，静态变量存储在永久代上")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("JDK1.7")]),s._v(" "),t("td",[s._v("有永久代，但已经逐步 “去永久代”，字符串常量池，静态变量移除，保存在堆中")])]),s._v(" "),t("tr",[t("td",[s._v("JDK1.8")]),s._v(" "),t("td",[s._v("无永久代，类型信息，字段，方法，常量保存在本地内存的元空间，但字符串常量池、静态变量仍然在堆中。")])])])]),s._v(" "),t("p",[s._v("JDK6的时候")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024058.png",alt:"image-20200708211541300"}})]),s._v(" "),t("p",[s._v("JDK7的时候")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024218.png",alt:"image-20200708211609911"}})]),s._v(" "),t("p",[s._v("JDK8的时候，元空间大小只受物理内存影响")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071024145.png",alt:"image-20200708211637952"}})]),s._v(" "),t("h3",{attrs:{id:"为什么永久代要被元空间替代"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么永久代要被元空间替代"}},[s._v("#")]),s._v(" 为什么永久代要被元空间替代？")]),s._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("JRockit是和HotSpot融合后的结果，因为JRockit没有永久代，所以他们不需要配置永久代")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("随着Java8的到来，HotSpot VM中再也见不到永久代了。但是这并不意味着类的元数据信息也消失了。这些数据被移到了一个"),t("strong",[s._v("与堆不相连的本地内存区域，这个区域叫做元空间")]),s._v("（Metaspace）。")])]),s._v(" "),t("li",[t("p",[s._v("由于类的元数据分配在本地内存中，元空间的最大可分配空间就是系统可用内存空间，这项改动是很有必要的，原因有：")])])]),s._v(" "),t("ol",[t("li",[s._v("永久代设置空间大小是很难确定的")])]),s._v(" "),t("p",[s._v("在某些场景下，如果动态加载类过多，容易产生Perm区的OOM。比如某个实际Web工\n程中，因为功能点比较多，在运行过程中，要不断动态加载很多类，经常出现致命错误。")]),s._v(" "),t("p",[s._v('"Exception in thread‘dubbo client x.x connector\'java.lang.OutOfMemoryError:PermGen space"')]),s._v(" "),t("blockquote",[t("p",[s._v("而元空间和永久代之间最大的区别在于：元空间并不在虚拟机中，而是使用本地内存。\n因此，默认情况下，元空间的大小仅受本地内存限制。")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("对永久代进行调优是很困难的")])]),s._v(" "),t("ul",[t("li",[s._v("主要是为了降低Full GC")])]),s._v(" "),t("p",[s._v("方法区的垃圾收集主要回收两部分内容："),t("strong",[s._v("常量池中废弃的常量")]),s._v("和"),t("strong",[s._v("不再使用的类型")])])]),s._v(" "),t("h3",{attrs:{id:"stringtable为什么要调整位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stringtable为什么要调整位置"}},[s._v("#")]),s._v(" StringTable为什么要调整位置")]),s._v(" "),t("p",[s._v("jdk7中将StringTable放到了堆空间中。因为永久代的回收效率很低，在Full GC的时候才会触发。而Full GC是老年代的空间不足、永久代不足时才会触发。")]),s._v(" "),t("p",[s._v("这就导致StringTable回收效率不高。而我们开发中会有大量的字符串被创建，回收效率低，导致永久代内存不足。放到堆里，能及时回收内存。")]),s._v(" "),t("h3",{attrs:{id:"静态变量存放在哪里"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态变量存放在哪里"}},[s._v("#")]),s._v(" 静态变量存放在哪里？")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("methodarea")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @Description\n * @Author zdk\n * @Date 2022/8/7 16:14\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StaticObjectTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectHolder")]),s._v(" staticObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectHolder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectHolder")]),s._v(" instanceObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectHolder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectHolder")]),s._v(" localObj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectHolder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectHolder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("静态引用对应的对象实体始终都存在堆空间")]),s._v(" "),t("p",[s._v("可以使用 jhsdb.ext进行查看(在jdk9的时候才引入的)")]),s._v(" "),t("blockquote",[t("p",[s._v("staticObj随着Test的类型信息存放在方法区，instanceObj随着Test的对象实例存放在Java堆，localObj则是存放在foo()方法栈帧的局部变量表中。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071025830.png",alt:"image-20200708215025527"}})]),s._v(" "),t("blockquote",[t("p",[s._v("测试发现：三个对象的数据在内存中的地址都落在Eden区范围内，")]),s._v(" "),t("p",[s._v("所以结论："),t("strong",[s._v("只要是对象实例必然会在Java堆中分配")])])]),s._v(" "),t("p",[s._v("接着，找到了一个引用该staticobj对象的地方，是在一个java.lang.Class的实例里，并且给出了这个实例的地址，通过Inspector查看该对象实例，可以清楚看到这确实是一个java.lang.Class类型的对象实例，里面有一个名为staticobj的实例字段：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071619333.png",alt:"image-20220807161934213"}})]),s._v(" "),t("p",[s._v("从《Java虚拟机规范》所定义的概念模型来看，所有Class相关的信息都应该存放在方法区之中，但方法区该如何实现，《Java虚拟机规范》并未做出规定，这就成了一件允许不同虚拟机自己灵活把握的事情。"),t("strong",[s._v("JDK7及其以后版本的HotSpot虚拟机选择把静态变量与类型在Java语言一端的映射class对象存放在一起，存储于Java堆之中，从我们的实验中也明确验证了这一点")])])]),s._v(" "),t("h2",{attrs:{id:"方法区的垃圾回收"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法区的垃圾回收"}},[s._v("#")]),s._v(" 方法区的垃圾回收")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("有些人认为方法区（如Hotspot虚拟机中的元空间或者永久代）是没有垃圾收集行为的，其实不然。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("《Java虚拟机规范》对方法区的约束是非常宽松的，提到过可以不要求虚拟机在方法区中实现垃圾收集。事实上也确实有未实现或未能完整实现方法区类型卸载的收集器存在（如JDK11时期的zGC收集器就不支持类卸载）。")])]),s._v(" "),t("li",[t("p",[s._v("一般来说"),t("code",[s._v("这个区域的回收效果比较难令人满意，尤其是类型的卸载，条件相当苛刻")]),s._v("。但是这部分区域的回收"),t("strong",[s._v("有时又确实是必要的")]),s._v("。以前Sun公司的Bug列表中，曾出现过的若干个严重的Bug就是由于低版本的HotSpot虚拟机对此区域未完全回收而导致内存泄漏。")])])]),s._v(" "),t("p",[t("strong",[s._v("方法区的垃圾收集主要回收两部分内容：常量池中废弃的常量和不再使用的类型")]),s._v("。")])]),s._v(" "),t("blockquote",[t("p",[s._v("先来说说方法区内常量池之中主要存放的两大类常量：字面量和符号引用。字面量比较接近Java语言层次的常量概念，如文本字符串、被声明为final的常量值等。而符号引用则属于编译原理方面的概念，包括下面三类常量：")]),s._v(" "),t("ul",[t("li",[s._v("类和接口的全限定名")]),s._v(" "),t("li",[s._v("字段的名称和描述符")]),s._v(" "),t("li",[s._v("方法的名称和描述符")])])]),s._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("HotSpot虚拟机对常量池的回收策略是很明确的，只要常量池中的常量没有被任何地方引用，就可以被回收。")]),s._v(" "),t("p",[s._v("回收废弃常量与回收Java堆中的对象非常类似。（关于常量的回收比较简单，重点是类的回收）")]),s._v(" "),t("br"),s._v(" "),t("ul",[t("li",[t("p",[s._v("判定一个常量是否“废弃”还是相对简单，而要判定一个类型是否属于“不再被使用的类”的条件就比较苛刻了。"),t("strong",[s._v("需要同时满足下面三个条件")]),s._v("：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("该类所有的实例都已经被回收，也就是"),t("code",[s._v("Java堆中不存在该类及其任何派生子类的实例")]),s._v("。")])]),s._v(" "),t("li",[t("p",[s._v("加载该类的"),t("code",[s._v("类加载器已经被回收")]),s._v("，这个条件除非是经过精心设计的可替换类加载器的场景，如OSGi、JSP的重加载等，否则通常是很难达成的。")])]),s._v(" "),t("li",[t("p",[s._v("该类对应的java.lang.Class对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。")])])])]),s._v(" "),t("li",[t("p",[s._v('Java虚拟机被允许对满足上述三个条件的无用类进行回收，这里说的仅仅是"被允许"，而并不是和对象一样，没有引用了就必然会回收。关于是否要对类型进行回收，HotSpot虚拟机提供了'),t("code",[s._v("-Xnoclassgc")]),s._v("参数进行控制，还可以使用"),t("code",[s._v("-verbose:class")]),s._v(" 以及 "),t("code",[s._v("-XX:+TraceClass-Loading")]),s._v("、"),t("code",[s._v("-XX:+TraceClassUnLoading")]),s._v("查看类加载和卸载信息")])]),s._v(" "),t("li",[t("p",[s._v("在大量使用反射、动态代理、CGLib等字节码框架，动态生成JSP以及OSGi这类频繁自定义类加载器的场景中，"),t("u",[s._v("通常都需要Java虚拟机具备类型卸载的能力，以保证不会对方法区造成过大的内存压力")]),s._v("。")])])])]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://images.zaiolos.top/images/202208071025601.png",alt:"image-20200708220303243"}})]),s._v(" "),t("h3",{attrs:{id:"常见面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见面试题"}},[s._v("#")]),s._v(" 常见面试题")]),s._v(" "),t("p",[s._v("百度\n三面：说一下JVM内存模型吧，有哪些区？分别干什么的？")]),s._v(" "),t("p",[s._v("蚂蚁金服：\nJava8的内存分代改进\nJVM内存分哪几个区，每个区的作用是什么？\n一面：JVM内存分布/内存结构？栈和堆的区别？堆的结构？为什么两个survivor区？\n二面：Eden和survior的比例分配")]),s._v(" "),t("p",[s._v("小米：\njvm内存分区，为什么要有新生代和老年代")]),s._v(" "),t("p",[s._v("字节跳动：\n二面：Java的内存分区\n二面：讲讲vm运行时数据库区\n什么时候对象会进入老年代？")]),s._v(" "),t("p",[s._v("京东：\nJVM的内存结构，Eden和Survivor比例。\nJVM内存为什么要分成新生代，老年代，持久代。新生代中为什么要分为Eden和survivor。")]),s._v(" "),t("p",[s._v("天猫：\n一面：Jvm内存模型以及分区，需要详细到每个区放什么。\n一面：JVM的内存模型，Java8做了什么改")]),s._v(" "),t("p",[s._v("拼多多：\nJVM内存分哪几个区，每个区的作用是什么？")]),s._v(" "),t("p",[s._v("美团：\njava内存分配\njvm的永久代中会发生垃圾回收吗？\n一面：jvm内存分区，为什么要有新生代和老年代？")])],1)}),[],!1,null,null,null);t.default=e.exports}}]);